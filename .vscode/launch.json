{
    // Use IntelliSense to learn about possible attributes.
    // Hover to view descriptions of existing attributes.
    // For more information, visit: https://go.microsoft.com/fwlink/?linkid=830387
    "version": "0.2.0",
    "configurations": [
        {
            "name": "Python Debugger: ann-benchmarks-aerospike",
            "type": "debugpy",
            "request": "launch",
            "program": "${workspaceFolder}/run.py",
            "cwd": "${workspaceFolder}",
            "args": ["--algorithm", "aerospike",
                     "--max-n-algorithms", "4",
                     "--runs", "5",
                     "--dataset", "random-xs-20-angular",
                     "--local",
                     "--force",
                     "--timeout", "300"],
            "console": "integratedTerminal",
            "justMyCode": false,
        },
        {
            "name": "Python Debugger: ann-benchmarks-aerospike Glove Angular",
            "type": "debugpy",
            "request": "launch",
            "program": "${workspaceFolder}/run.py",
            "cwd": "${workspaceFolder}",
            "args": ["--algorithm", "aerospike",
                     "--max-n-algorithms", "4",
                     "--runs", "5",
                     "--dataset", "glove-100-angular",
                     "--local",
                     "--force",
                     "--timeout", "300"],
            "console": "integratedTerminal"
        },
        {
            "name": "Python Debugger: ann-benchmarks-aerospike Euclidean Local",
            "type": "debugpy",
            "request": "launch",
            "program": "${workspaceFolder}/run.py",
            "cwd": "${workspaceFolder}",
            "args": ["--algorithm", "aerospike",
                     "--max-n-algorithms", "5",
                     "--dataset", "gist-960-euclidean",
                     "--local",
                     "--force",
                     "--timeout", "7200"],
            "console": "integratedTerminal"
        },
        {
            "name": "Python Debugger: ann-benchmarks-aerospike Docker",
            "type": "debugpy",
            "request": "launch",
            "program": "${workspaceFolder}/run.py",
            "cwd": "${workspaceFolder}",
            "args": ["--algorithm", "aerospike",
                     "--max-n-algorithms", "5",
                     "--force",
                     "--timeout", "7200"],
            "console": "integratedTerminal"
        },
        {            
            "name": "Python Debugger: hdf_import (prompt DS)",
            "type": "debugpy",
            "request": "launch",
            "program": "${workspaceFolder}/aerospike/hdf_import.py",
            "cwd": "${workspaceFolder}/aerospike",
            "args": [
                    "--dataset", "${input:enterDataset}",
                    "--concurrency", "5000",
                    "--idxdrop",
                    "--logfile", "./hdfimport.log"
                    ],
            "justMyCode": false,
            "console": "integratedTerminal"
        }, 
        {           
            "name": "Python Debugger: hdf_import (prompt HDF)",
            "type": "debugpy",
            "request": "launch",
            "program": "${workspaceFolder}/aerospike/hdf_import.py",
            "cwd": "${workspaceFolder}/aerospike",
            "args": [
                    "--hdf", "${input:enterHDFFile}",
                    "--concurrency", "5000",
                    "--idxdrop",
                    "--logfile", "./hdfimport-hdf.log"                    
                    ],
            "console": "integratedTerminal"
        }, 
        {           
            "name": "Python Debugger: hdf_import Sleep 10 mins (prompt HDF)",
            "type": "debugpy",
            "request": "launch",
            "program": "${workspaceFolder}/aerospike/hdf_import.py",
            "cwd": "${workspaceFolder}/aerospike",
            "args": [
                    "--hdf", "${input:enterHDFFile}",
                    "--concurrency", "5000",
                    "--idxdrop",
                    "--logfile", "./hdfimport-hdf.log",
                    "--exhaustedevt", "600"
                    ],
            "console": "integratedTerminal"
        }, 
        {           
            "name": "Python Debugger: hdf_import angular (prompt HDF)",
            "type": "debugpy",
            "request": "launch",
            "program": "${workspaceFolder}/aerospike/hdf_import.py",
            "cwd": "${workspaceFolder}/aerospike",
            "args": [
                    "--hdf", "${input:enterHDFFile}",
                    "--concurrency", "5000",
                    "--distancetype", "COSINE",
                    "--idxdrop",
                    "--logfile", "./hdfimport-angular.log",                    
                    ],
            "console": "integratedTerminal"
        },          
        {
            "name": "Python Debugger: hdf_import LB",
            "type": "debugpy",
            "request": "launch",
            "program": "${workspaceFolder}/aerospike/hdf_import.py",
            "cwd": "${workspaceFolder}/aerospike",
            "args": [
                    "--dataset", "random-xs-20-angular",
                    "--concurrency", "5000",
                    "--idxdrop",
                    "--logfile", "./hdfimport.log",
                     "--loglevel", "DEBUG",
                     "--vectorloadbalancer"
                    ],
            "console": "integratedTerminal"
        },        
        {
            "name": "Python Debugger: hdf_import glove (no log)",
            "type": "debugpy",
            "request": "launch",
            "program": "${workspaceFolder}/aerospike/hdf_import.py",
            "cwd": "${workspaceFolder}/aerospike",
            "args": [
                    "--dataset", "glove-100-angular",
                    "--idxdrop",
                    "--concurrency", "10000",
                    "--indexparams", "{\"m\":16, \"efconst\":100, \"ef\":100, \"batching_params\":{\"maxrecs\":10000, \"interval\":10000}, \"caching_params\":{\"max_entries\":\"None\", \"expiry\":\"None\"}, \"healer_params\":{\"max_scan_rate_per_node\":\"None\", \"max_scan_page_size\":\"None\", \"re_index_percent\": \"None\", \"schedule_delay\": \"None\", \"parallelism\": \"None\"}, \"merge_params\":{\"parallelism\": \"None\"}}"
                    ],
            "console": "integratedTerminal"
        },
        {
            "name": "Python Debugger: hdf_import glove",
            "type": "debugpy",
            "request": "launch",
            "program": "${workspaceFolder}/aerospike/hdf_import.py",
            "cwd": "${workspaceFolder}/aerospike",
            "args": [
                    "--dataset", "glove-100-angular",
                    "--concurrency", "10000",
                    "--logfile", "./hdfimport-glove.log",
                    "--idxdrop"
                    ],
            "console": "integratedTerminal"
        },
        {
            "name": "Python Debugger: hdf_query (prompt DS)",
            "type": "debugpy",
            "request": "launch",
            "program": "${workspaceFolder}/aerospike/hdf_query.py",
            "cwd": "${workspaceFolder}/aerospike",
            "args": [
                    "--dataset", "${input:enterDataset}",
                    "--logfile", "./hdfquery.log",
                    "-r", "1"
                    ],
            "console": "integratedTerminal"
        },        
        {
            "name": "Python Debugger: hdf_query (proimpt HDF)",
            "type": "debugpy",
            "request": "launch",
            "program": "${workspaceFolder}/aerospike/hdf_query.py",
            "cwd": "${workspaceFolder}/aerospike",
            "args": [
                    "--hdf", "${input:enterDataset}",
                    "--logfile", "./hdfquery.log",
                    "-r", "10"
                    ],
            "console": "integratedTerminal"
        },
        {
            "name": "Python Debugger: hdf_query (check prompt HDF)",
            "type": "debugpy",
            "request": "launch",
            "program": "${workspaceFolder}/aerospike/hdf_query.py",
            "cwd": "${workspaceFolder}/aerospike",
            "args": [
                    "--hdf", "${input:enterDataset}",
                    "--logfile", "./hdfquery.log",
                    "--check",
                    "-r", "10"
                    ],
            "console": "integratedTerminal"
        },
        {
            "name": "Python Debugger: hdf_query (glove check)",
            "type": "debugpy",
            "request": "launch",
            "program": "${workspaceFolder}/aerospike/hdf_query.py",
            "cwd": "${workspaceFolder}/aerospike",
            "args": [
                    "--dataset", "glove-100-angular",
                    "--logfile", "./hdfquery-glove.log",
                    "--check",
                    "-r", "10",
                    "--searchparams", "{\"ef\":10}"
                    ],
            "console": "integratedTerminal"
        },
        {
            "name": "Python Debugger: hdf_query (glove check limit)",
            "type": "debugpy",
            "request": "launch",
            "program": "${workspaceFolder}/aerospike/hdf_query.py",
            "cwd": "${workspaceFolder}/aerospike",
            "args": [
                    "--dataset", "glove-100-angular",
                    "--logfile", "./hdfquery-glove.log",
                    "--check",
                    "-r", "10",
                    "--limit", "10"
                    ],
            "console": "integratedTerminal"
        },
        {
            "name": "Python Debugger: hdf_query (gist 960)",
            "type": "debugpy",
            "request": "launch",
            "program": "${workspaceFolder}/aerospike/hdf_query.py",
            "cwd": "${workspaceFolder}/aerospike",
            "args": [
                    "--dataset", "gist-960-euclidean",
                    "--logfile", "./hdfquery-gist1.log",                    
                    "-r", "1",
                    "--limit", "10",                    
                    "--idxname", "gist-960-euclidean_Idx"
                    ],
            "console": "integratedTerminal"
        },
        {
            "name": "Python Debugger: hdf_create_dataset (prompt HDF)",
            "type": "debugpy",
            "request": "launch",
            "program": "${workspaceFolder}/aerospike/hdf_create_dataset.py",
            "cwd": "${workspaceFolder}/aerospike",
            "args": [
                    "--hosts", "localhost:3000",
                    "--hdf", "${input:enterHDFFile}",
                    "--logfile", "./hdfcreatedataset.log",
                    "--indexname", "${input:enterDatasetIdxName}",
                    "--records", "-1"
                    ],
            "justMyCode": false,
            "console": "integratedTerminal"
        },        
        {
            "name": "Python Debugger: bigann_download (prompt)",
            "type": "debugpy",
            "request": "launch",
            "program": "${workspaceFolder}/aerospike/bigann_download.py",
            "cwd": "${workspaceFolder}/aerospike",
            "args": [
                    "--dataset", "${input:enterBigDataset}"
                    ],
            "console": "integratedTerminal"
        },
        {
            "name": "Python Debugger: bigann_convert (prompt DS)",
            "type": "debugpy",
            "request": "launch",
            "program": "${workspaceFolder}/aerospike/bigann_convert_hdf.py",
            "cwd": "${workspaceFolder}/aerospike",
            "args": [
                    "--dataset", "${input:enterBigDataset}",
                    "--hdf", "${input:enterBigHDFFile}"
                    ],
            "console": "integratedTerminal"
        },
        {
            "name": "Python Debugger: bigann_convert Convert Euclidean (prompt DS)",
            "type": "debugpy",
            "request": "launch",
            "program": "${workspaceFolder}/aerospike/bigann_convert_hdf.py",
            "cwd": "${workspaceFolder}/aerospike",
            "args": [
                    "--dataset", "${input:enterBigDataset}",
                    "--hdf", "${input:enterBigHDFFile}",
                    "--distancesquareeuclidean"
                    ],
            "console": "integratedTerminal"
        },
    ],
    "inputs": [
    {
      "id": "enterDataset",
      "type": "promptString",
      "description": "Enter Dataset",
      "default": "random-xs-20-angular"
    },
    {
        "id": "enterBigDataset",
        "type": "promptString",
        "description": "Enter Big Dataset",
        "default": "random-xs"
    },
    {
        "id": "enterHDFFile",
        "type": "promptString",
        "description": "Enter HDF Path",
        "default": "test"
      },
      {
        "id": "enterBigHDFFile",
        "type": "promptString",
        "description": "Enter HDF Path",
        "default": "bigtest"
      },
      {
        "id": "enterDatasetIdxName",
        "type": "promptString",
        "description": "Enter Index Name",
        "default": "random-xs-20-angular_Idx"
      }
  ]
}